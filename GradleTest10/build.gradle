apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'eclipse'
apply plugin: 'war'

compileJava.options.encoding = 'UTF-8'
sourceCompatibility = 1.7
version = '1.0'

eclipse {
	wtp {
		facet {
			facet name: 'jst.web', version: '3.0'
			facet name: 'jst.java', version: '1.7'
			
		}
	}
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
	compile 'org.springframework:spring-webmvc:4.1.2.RELEASE', //추가
	'org.springframework:spring-context:4.1.2.RELEASE',	
	'cglib:cglib-nodep:2.2.2', // Spring 3.2.x 이상에서는 빼도 된다. 
	'commons-logging:commons-logging:1.2',
	'ch.qos.logback:logback-classic:1.0.6', 
	'org.slf4j:slf4j-api:1.7.6',	
	'org.mybatis:mybatis:3.2.2', //MyBatis 추가           
	'org.mybatis:mybatis-spring:1.2.0', //MyBatis 추가           
	//'mysql:mysql-connector-java:5.1.26', //MyBatis 추가          
	'org.springframework:spring-jdbc:4.1.2.RELEASE', //MyBatis 추가           
	'org.springframework:spring-tx:4.1.2.RELEASE', //MyBatis 추가	
	'commons-dbcp:commons-dbcp:1.4',
	'org.apache.velocity:velocity:1.6.2', //벨로시티 추가
	'org.springframework:spring-context-support:4.1.2.RELEASE',//벨로시티 추가
	'com.thoughtworks.xstream:xstream:1.4.7',//XML타입추가
	'org.springframework:spring-oxm:4.1.2.RELEASE',	
	'com.fasterxml.jackson.core:jackson-databind:2.5.0-rc1'//JSON 타입추가
	
		
	providedCompile "javax.servlet:javax.servlet-api:3.0.1"
	
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
	runtime "javax.servlet:jstl:1.2"
}
// logback(slf4j)를 사용하기 때문에 모든 의존성에서 commons-logging는 제외
[configurations.runtime, configurations.default]*.exclude(module: 'commons-logging')

// JAVA 컴파일시 인코딩 설정
 [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

test {
    systemProperties 'property': 'value'
}


uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

// 프로젝트 초기화
// 1. java source directory 생성 : src/main/java, src/test/java
// 2. resource directory 생성    : src/main/resource, src/test/resource
// 3. web source directory 생성  : src/main/webapp, src/main/webapp/WEB-INF
// .settings 폴더의 org.eclipse.wst.common.component 파일을 설정한다.

 task "create-dirs" {
        def defaultPackage = "org.akash.gradle"
        ['java',  'resources'].each { String dir ->
           sourceSets*."$dir".srcDirs*.each { dir1 ->
             def newDir = new File(dir1, defaultPackage)
             newDir.mkdirs()
           }
        }
   }
 